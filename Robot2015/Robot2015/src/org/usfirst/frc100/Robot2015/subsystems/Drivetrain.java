package org.usfirst.frc100.Robot2015.subsystems;

import org.usfirst.frc100.Robot2015.RobotMap;
import org.usfirst.frc100.Robot2015.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;

import edu.wpi.first.wpilibj.command.Subsystem;

/**
 * The "butterslide" drivetrain of the robot.
 */
public class Drivetrain extends Subsystem {
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftMotor = RobotMap.drivetrainLeftMotor;
    SpeedController rightMotor = RobotMap.drivetrainRightMotor;
    RobotDrive robotDrive = RobotMap.drivetrainRobotDrive;
    SpeedController slideMotor = RobotMap.drivetrainSlideMotor;
    DoubleSolenoid leftShifter = RobotMap.drivetrainLeftShifter;
    DoubleSolenoid rightShifter = RobotMap.drivetrainRightShifter;
    DoubleSolenoid butterflyPiston = RobotMap.drivetrainButterflyPiston;
    Encoder leftEncoder = RobotMap.drivetrainLeftEncoder;
    Encoder rightEncoder = RobotMap.drivetrainRightEncoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Sets the default command to Drive
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new Drive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    }
    
    // Shifts to high or low gear
    public void shift (boolean highgear) {
    	if(highgear) {
    		leftShifter.set(DoubleSolenoid.Value.kForward);
    		rightShifter.set(DoubleSolenoid.Value.kForward);
    	} 
    	else {
    		leftShifter.set(DoubleSolenoid.Value.kReverse);
        	rightShifter.set(DoubleSolenoid.Value.kReverse);
    	}
    }
    
    // Switches to tank or slide drive
    public void switchDrive (boolean tankdrive) {
    	if(tankdrive) {
    		butterflyPiston.set(DoubleSolenoid.Value.kReverse);
    	}
    	else{
    		butterflyPiston.set(DoubleSolenoid.Value.kForward);
    	}	
     }
    
    // Returns whether the drivetrain is in slide mode
    public boolean isSlide () {//checks for tank/slide
    	if(butterflyPiston.get() == DoubleSolenoid.Value.kForward){
    		return true;
    	}
    	else {
    		return false;
    	}
    }
}
